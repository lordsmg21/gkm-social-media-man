version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gkm-postgres-dev
    environment:
      POSTGRES_DB: gkm_portal
      POSTGRES_USER: gkm_user
      POSTGRES_PASSWORD: gkm_secure_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - gkm-network-dev

  # Redis for session management
  redis:
    image: redis:7-alpine
    container_name: gkm-redis-dev
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - gkm-network-dev

  # Backend API (Development)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: gkm-backend-dev
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=gkm_portal
      - DB_USER=gkm_user
      - DB_PASS=gkm_secure_password
      - JWT_SECRET=dev-jwt-secret-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - PORT=5000
      - MAX_FILE_SIZE=209715200
      - UPLOAD_DIR=uploads
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - backend_uploads_dev:/app/uploads
      - ./backend/src:/app/src:ro
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - gkm-network-dev

volumes:
  postgres_data_dev:
    driver: local
  backend_uploads_dev:
    driver: local

networks:
  gkm-network-dev:
    driver: bridge